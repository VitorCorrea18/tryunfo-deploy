{"version":3,"sources":["components/Form.js","components/Card.js","components/PreView.js","components/AllCards.js","App.js","index.js"],"names":["Form","this","props","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","cardTrunfo","hasTrunfo","isSaveButtonDisabled","onInputChange","onSaveButtonClick","className","onSubmit","htmlFor","name","type","value","onChange","required","checked","disabled","React","Component","Card","src","alt","id","PreView","AllCards","state","filterInput","onEraseButtonClick","bind","handleFilter","event","target","setState","parentNode","eraseTrunfo","querySelector","remove","savedCards","placeholder","selected","hidden","filter","card","includes","map","description","attr1","attr2","attr3","image","rare","trunfo","onClick","App","checkAttr","totalAttr","Number","find","attr","checkForm","keys","Object","key","onCheckboxChange","addTrunfo","addNewCard","newCard","prevState","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e0d641e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Form extends React.Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      isSaveButtonDisabled,\n      onInputChange,\n      onSaveButtonClick,\n    } = this.props;\n\n    return (\n\n      <form className=\"form\" onSubmit={ onSaveButtonClick }>\n        <header>\n          <h1>Adicionar nova carta</h1>\n        </header>\n        <div>\n          <label htmlFor=\"name\">\n            Nome\n            <input\n              data-testid=\"name-input\"\n              className=\"large-input has-label\"\n              name=\"cardName\"\n              type=\"text\"\n              value={ cardName }\n              onChange={ onInputChange }\n              required\n            />\n          </label>\n\n          <label htmlFor=\"description\">\n            Descrição\n            <textarea\n              data-testid=\"description-input\"\n              className=\"text-area has-label\"\n              name=\"cardDescription\"\n              type=\"text\"\n              value={ cardDescription }\n              onChange={ onInputChange }\n              required\n            />\n          </label>\n\n          <label htmlFor=\"attr1\">\n            Aceleração\n            <input\n              data-testid=\"attr1-input\"\n              name=\"cardAttr1\"\n              type=\"number\"\n              value={ cardAttr1 }\n              onChange={ onInputChange }\n              required\n            />\n          </label>\n\n          <label htmlFor=\"attr2\">\n            Velocidade\n            <input\n              data-testid=\"attr2-input\"\n              name=\"cardAttr2\"\n              type=\"number\"\n              value={ cardAttr2 }\n              onChange={ onInputChange }\n              required\n            />\n          </label>\n\n          <label htmlFor=\"attr3\">\n            Direção\n            <input\n              data-testid=\"attr3-input\"\n              name=\"cardAttr3\"\n              type=\"number\"\n              value={ cardAttr3 }\n              onChange={ onInputChange }\n              required\n            />\n          </label>\n\n          <label htmlFor=\"imagem\">\n            Imagem\n            <input\n              data-testid=\"image-input\"\n              className=\"has-label\"\n              name=\"cardImage\"\n              type=\"text\"\n              value={ cardImage }\n              onChange={ onInputChange }\n              required\n            />\n          </label>\n\n          <label htmlFor=\"raridade\">\n            Raridade\n            <select\n              data-testid=\"rare-input\"\n              name=\"cardRare\"\n              className=\"large-input has-label\"\n              value={ cardRare }\n              onChange={ onInputChange }\n            >\n              <option>normal</option>\n              <option>raro</option>\n              <option>muito raro</option>\n            </select>\n          </label>\n\n          {\n            (!hasTrunfo)\n              ? (\n                <label htmlFor=\"trunfo\">\n                  <input\n                    data-testid=\"trunfo-input\"\n                    type=\"checkbox\"\n                    name=\"cardTrunfo\"\n                    checked={ cardTrunfo }\n                    onChange={ onInputChange }\n                  />\n                  Super Trybe Trunfo\n                </label>\n              ) : <p>Você já tem um Super Trunfo em seu baralho</p>\n          }\n\n          <button\n            data-testid=\"save-button\"\n            type=\"submit\"\n            disabled={ isSaveButtonDisabled }\n            // onClick={ onSaveButtonClick }\n          >\n            Salvar\n          </button>\n        </div>\n\n      </form>\n\n    );\n  }\n}\n\nForm.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.string.isRequired,\n  cardAttr2: PropTypes.string.isRequired,\n  cardAttr3: PropTypes.string.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n  hasTrunfo: PropTypes.bool.isRequired,\n  isSaveButtonDisabled: PropTypes.bool.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSaveButtonClick: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Card extends React.Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    } = this.props;\n\n    return (\n      <div className=\"card_area\">\n        <div className=\"card_name_div\">\n          <h4 className=\"card_name\">{cardName}</h4>\n        </div>\n        <div className=\"card_img_div\">\n          <img\n            className=\"card_img\"\n            src={ cardImage }\n            alt={ cardName }\n          />\n        </div>\n\n        <p className=\"card_decription\">{cardDescription}</p>\n        <div className=\"card_att_div\">\n          <span>{`Aceleração: ${cardAttr1}`}</span>\n          <span>{`Velocidade: ${cardAttr2}`}</span>\n          <span>{`Direção: ${cardAttr3}`}</span>\n        </div>\n\n        <p className=\"card_rare\">{cardRare}</p>\n\n        {\n          cardTrunfo ? <b id=\"trunfo\">Super Trunfo</b> : <b />\n        }\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.string.isRequired,\n  cardAttr2: PropTypes.string.isRequired,\n  cardAttr3: PropTypes.string.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\n\nclass PreView extends React.Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    } = this.props;\n    return (\n      <div className=\"visualizacao\">\n        <header>\n          <h1>Pré-visualização</h1>\n        </header>\n        <Card\n          cardName={ cardName }\n          cardDescription={ cardDescription }\n          cardAttr1={ cardAttr1 }\n          cardAttr2={ cardAttr2 }\n          cardAttr3={ cardAttr3 }\n          cardImage={ cardImage }\n          cardRare={ cardRare }\n          cardTrunfo={ cardTrunfo }\n        />\n      </div>\n    );\n  }\n}\n\nPreView.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.string.isRequired,\n  cardAttr2: PropTypes.string.isRequired,\n  cardAttr3: PropTypes.string.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n};\n\nexport default PreView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\n\nclass AllCards extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      filterInput: '',\n    };\n    this.onEraseButtonClick = this.onEraseButtonClick.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n  }\n\n  handleFilter(event) {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  onEraseButtonClick({ target }) {\n    const { parentNode } = target;\n    const { eraseTrunfo } = this.props;\n    if (parentNode.querySelector('#trunfo')) eraseTrunfo();\n    target.parentNode.remove();\n  }\n\n  render() {\n    const { savedCards } = this.props;\n    const { filterInput } = this.state;\n    return (\n      <div className=\"all-cards\">\n        <header><h1>Todas as cartas</h1></header>\n        <section className=\"filters-section\">\n          <h1>Filtro de busca</h1>\n          <input\n            data-testid=\"name-filter\"\n            id=\"filterInput\"\n            name=\"filterInput\"\n            type=\"text\"\n            placeholder=\"Nome da carta\"\n            value={ filterInput }\n            onChange={ this.handleFilter }\n          />\n          <select\n            data-testid=\"rare-filter\"\n          >\n            <option disabled selected hidden className=\"select-exemple\">Raridade</option>\n            <option value=\"todas\">todas</option>\n            <option value=\"normal\">normal</option>\n            <option value=\"raro\">raro</option>\n            <option value=\"muito raro\">muito raro</option>\n          </select>\n          <label htmlFor=\"filter-trunfo\">\n            <input\n              data-testid=\"trunfo-filter\"\n              id=\"filter-trunfo\"\n              name=\"filter-trunfo\"\n              type=\"checkbox\"\n              className=\"is-trunfo\"\n            />\n            Super Trybe Trunfo\n          </label>\n        </section>\n        <main className=\"cards-display\">\n          <ul className=\"card-list\">\n            {\n              savedCards\n                .filter((card) => card.name.includes(filterInput))\n                .map((card) => (\n                  <div className=\"card-with-button\" key={ card.name }>\n                    <Card\n                      cardName={ card.name }\n                      cardDescription={ card.description }\n                      cardAttr1={ card.attr1 }\n                      cardAttr2={ card.attr2 }\n                      cardAttr3={ card.attr3 }\n                      cardImage={ card.image }\n                      cardRare={ card.rare }\n                      cardTrunfo={ card.trunfo }\n                    />\n                    <button\n                      data-testid=\"delete-button\"\n                      type=\"button\"\n                      className=\"erase-btn\"\n                      onClick={ this.onEraseButtonClick }\n                    >\n                      Excluir\n                    </button>\n                  </div>\n                ))\n            }\n          </ul>\n        </main>\n      </div>\n    );\n  }\n}\n\nAllCards.propTypes = {\n  savedCards: PropTypes.instanceOf(Array).isRequired,\n  eraseTrunfo: PropTypes.func.isRequired,\n};\n\nexport default AllCards;\n","import React from 'react';\nimport Form from './components/Form';\nimport PreView from './components/PreView';\nimport AllCards from './components/AllCards';\nimport './index.css';\nimport './css/form.css';\nimport './css/PreView.css';\nimport './css/card.css';\nimport './css/AllCards.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '',\n      cardAttr2: '',\n      cardAttr3: '',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      hasTrunfo: false,\n      isSaveButtonDisabled: true,\n      savedCards: [],\n    };\n\n    // this.onInputChange = this.onInputChange.bind(this);\n    // arrow function não precisa bind *-*\n  }\n\n  checkAttr = () => {\n    const { cardAttr1, cardAttr2, cardAttr3 } = this.state;\n    const maxAttr = 90;\n    const totalAttr = Number(cardAttr1) + Number(cardAttr2) + Number(cardAttr3);\n    const maxTotalAttr = 210;\n    if (\n      ([cardAttr1, cardAttr2, cardAttr3].find((attr) => attr > maxAttr || attr < 0))\n      || totalAttr > maxTotalAttr\n    ) {\n      return false;\n    } return true;\n    // verifica se algum atributo é maior que 90 ou menor que 0, e depois verifica se\n    // a soma de todos os atributos é maior que o maximo.\n  }\n\n  checkForm = () => {\n    const keys = Object.keys(this.state);\n    const { state } = this;\n    if (!keys.find((key) => state[key] === '')) { // verifica se algum campo está vazio\n      if (this.checkAttr()) { // se a primeira condição for verdadeira, chama a checkAttr\n        this.setState({ isSaveButtonDisabled: false }); // se checkAttr voltar true abilita o botão alterando o estado.\n      } else this.setState({ isSaveButtonDisabled: true }); // se checkAttr voltar false mantém o botão desabilitado no estado.\n    } else this.setState({ isSaveButtonDisabled: true });\n  }\n\n  onInputChange = (event) => {\n    const { name, value } = event.target;\n    if (event.target.type === 'checkbox') {\n      this.onCheckboxChange();\n    } else {\n      this.setState({\n        [name]: value,\n      }, this.checkForm);\n    }\n  }\n\n  // verifica se o checkbox super trunfo está selecionado e marca a carta como super trunfo\n  onCheckboxChange = () => {\n    const { cardTrunfo } = this.state;\n    if (!cardTrunfo) {\n      this.setState({ cardTrunfo: true });\n    } else this.setState({ cardTrunfo: false });\n  }\n\n  addTrunfo = () => {\n    this.setState({\n      hasTrunfo: true,\n      cardTrunfo: false,\n    });\n  }\n\n  addNewCard = (newCard) => {\n    this.setState((prevState) => ({\n      savedCards: [...prevState.savedCards, newCard],\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'normal',\n    }));\n  }\n\n  onSaveButtonClick = (event) => {\n    event.preventDefault();\n    const { cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo } = this.state;\n    const newCard = {\n      name: cardName,\n      description: cardDescription,\n      attr1: cardAttr1,\n      attr2: cardAttr2,\n      attr3: cardAttr3,\n      image: cardImage,\n      rare: cardRare,\n      trunfo: cardTrunfo,\n    };\n    this.addNewCard(newCard);\n    if (cardTrunfo === true) this.addTrunfo();\n  }\n\n  eraseTrunfo = () => {\n    this.setState({ hasTrunfo: false });\n  }\n\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      isSaveButtonDisabled,\n      savedCards,\n    } = this.state;\n\n    return (\n      <>\n        <main className=\"create-card-section\">\n          <Form\n            cardName={ cardName }\n            cardDescription={ cardDescription }\n            cardAttr1={ cardAttr1 }\n            cardAttr2={ cardAttr2 }\n            cardAttr3={ cardAttr3 }\n            cardImage={ cardImage }\n            cardRare={ cardRare }\n            cardTrunfo={ cardTrunfo }\n            hasTrunfo={ hasTrunfo }\n            isSaveButtonDisabled={ isSaveButtonDisabled }\n            onInputChange={ this.onInputChange }\n            onCheckboxChange={ this.onCheckboxChange }\n            onSaveButtonClick={ this.onSaveButtonClick }\n          />\n          <PreView\n            cardName={ cardName }\n            cardDescription={ cardDescription }\n            cardAttr1={ cardAttr1 }\n            cardAttr2={ cardAttr2 }\n            cardAttr3={ cardAttr3 }\n            cardImage={ cardImage }\n            cardRare={ cardRare }\n            cardTrunfo={ cardTrunfo }\n          />\n        </main>\n        <section className=\"all-cards-section\">\n          <AllCards\n            savedCards={ savedCards }\n            eraseTrunfo={ this.eraseTrunfo }\n          />\n        </section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}